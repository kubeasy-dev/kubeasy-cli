---
name: Lint

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
      - '.github/**'
      - 'go.mod'
      - 'go.sum'
      - 'package-lock.json'
      - 'package.json'
  pull_request:
    branches:
      - main
    paths-ignore:
      - 'README.md'
      - '.github/**'
      - 'go.mod'
      - 'go.sum'
      - 'package-lock.json'
      - 'package.json'

jobs:
  # Go linting with golangci-lint (faster and more focused than super-linter)
  golangci-lint:
    name: Go Lint
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: read
      pull-requests: read

    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Set up Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version: "1.25.3"
          cache: true  # Enable Go modules caching

      - name: Generate a token
        id: generate-token
        uses: actions/create-github-app-token@67018539274d69449ef7c02e8e71183d1719ab42 # v2.1.4
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - name: Configure private token
        env:
          GH_ACCESS_TOKEN: ${{ steps.generate-token.outputs.token }}
        run: |
          git config --global url."https://x-access-token:${GH_ACCESS_TOKEN}@github.com/".insteadOf "https://github.com/"

      - name: Download dependencies
        run: go mod download

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@971e284b6050e8a5849b72094c50ab08da042db8 # v6.1.1
        with:
          version: latest
          args: --config .github/linters/.golangci.yml --timeout 5m
          # Only show new issues on PRs (not historical issues)
          only-new-issues: ${{ github.event_name == 'pull_request' }}

  # Additional validation with super-linter (GitHub Actions, YAML, etc.)
  super-linter:
    name: Other Linters
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: read
      statuses: write

    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: Load super-linter configuration
        run: grep -v '^#' .github/super-linter.env >> "$GITHUB_ENV"

      - name: Super-linter (non-Go files)
        uses: super-linter/super-linter@2bdd90ed3262e023ac84bf8fe35dc480721fc1f2 # v8.2.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Disable Go linting in super-linter since golangci-lint handles it
          VALIDATE_GO: false
          VALIDATE_GO_MODULES: true